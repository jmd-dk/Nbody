#!/usr/bin/env bash

# This script performs a test to see whether the many compiler
# optimizations (from pyxpp.py and the C compiler) introduce
# bugs in the code. A complex simulation is run with all and
# with no optimizations.

# Absolute path and name of the directory of this file
this_dir="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")"
this_test="$(basename "${this_dir}")"

# Set up error trapping
ctrl_c(){
    trap : 0
    exit 2
}
abort(){
    exit_code=$?
    colorprint "An error occurred during ${this_test} test!" "red"
    exit ${exit_code}
}
trap 'ctrl_c' SIGINT
trap 'abort' EXIT
set -e

# Cleanup from last test run
"${this_dir}/clean"

# Run the COùòïCEPT code without optimizations
(cd "${concept_dir}" && make clean)
"${concept}" -n 4 -p "${this_dir}/params" --no-optimizations --local
mv "${this_dir}/output" "${this_dir}/output_without_optimizations"

# Run the COùòïCEPT code with optimizations
(cd "${concept_dir}" && make clean)
"${concept}" -n 4 -p "${this_dir}/params" --local
mv "${this_dir}/output" "${this_dir}/output_with_optimizations"

# Analyse the output power spectra and 2D renders
"${concept}" -n 1 -p "${this_dir}/params" -m "${this_dir}/analyze.py" --pure-python --local

# Test ran successfully. Deactivate traps.
trap : 0
