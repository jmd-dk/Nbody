#!/usr/bin/env bash

# This script performs a kick test of the CO𝘕CEPT (PP) code with the periodic
# Ewald force disabled, by comparison with GADGET-2 (TreePM). ICs are generated,
# containing 8 particles placed so that they all correspond to the
# nearest image of themselves. The particles start out with zero velocity.

# Absolute path and name of the directory of this file
this_dir="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")"
this_test="$(basename "${this_dir}")"

# Set up error trapping
ctrl_c(){
    trap : 0
    exit 2
}
abort(){
    exit_code=$?
    colorprint "An error occurred during ${this_test} test!" "red"
    exit ${exit_code}
}
trap 'ctrl_c' SIGINT
trap 'abort' EXIT
set -e

# Cleanup from last test run
"${this_dir}/clean"

# Generate ICs
"${concept}" -n 1 -p "${this_dir}/params" -m "${this_dir}/generate_IC.py" --pure-python --local

# Run the CO𝘕CEPT code on the generated ICs
"${concept}" -n 1 -p "${this_dir}/params" --local

# Run the GADGET-2 code on the generated ICs.
# Here we edit forcetree.c so that the generated
# Ewald corrections are set to zero.
Gadget2_local_dir="${this_dir}/Gadget2"
mkdir -p "${Gadget2_local_dir}"
cp "${Gadget2_dir}/"* "${Gadget2_local_dir}" 2>/dev/null || :
rm -f "${Gadget2_local_dir}/ewald_spc_table_64.dat"  # Remove tabulated Ewald grid
for n in 0 1 2; do
    dim=$(echo "xyz" | head -c $((n + 1)) | tail -c 1)
    sed -i "/fcorr${dim}\[i\]\[j\]\[k\] = force\[${n}\];/c\fcorr${dim}\[i\]\[j\]\[k\] = 0.0;" \
        "${Gadget2_local_dir}/forcetree.c"
done
"${concept}" -u gadget "${Gadget2_local_dir}" -p "${this_dir}/params"
(                             \
    cd "${Gadget2_local_dir}" \
    && make clean             \
    && make                   \
    && ./Gadget2 params       \
)

# Analyze the output snapshots
"${concept}" -n 1 -p "${this_dir}/params" -m "${this_dir}/analyze.py" --pure-python --local

# Test ran successfully. Deactivate traps.
trap : 0
